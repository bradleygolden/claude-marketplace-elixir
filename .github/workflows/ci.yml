name: CI

on:
  push:
    branches:
      - main
      - 'claude/**'
  pull_request:
    branches:
      - main

jobs:
  validate:
    name: Validate Marketplace Structure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate marketplace.json
        run: |
          echo "Validating marketplace.json..."
          jq empty .claude-plugin/marketplace.json
          echo "✅ marketplace.json is valid JSON"

      - name: Validate plugin metadata
        run: |
          echo "Validating plugin.json files..."
          for plugin_json in plugins/*/.claude-plugin/plugin.json; do
            if [ -f "$plugin_json" ]; then
              echo "Checking $plugin_json..."
              jq empty "$plugin_json"
            fi
          done
          echo "✅ All plugin.json files are valid"

      - name: Validate hook definitions
        run: |
          echo "Validating hooks.json files..."
          for hooks_json in plugins/*/hooks/hooks.json; do
            if [ -f "$hooks_json" ]; then
              echo "Checking $hooks_json..."
              jq empty "$hooks_json"
            fi
          done
          echo "✅ All hooks.json files are valid"

  plugin-tests:
    name: Plugin Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Erlang/OTP and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26.0'
          elixir-version: '1.15.7'

      - name: Install dependencies for test projects
        run: |
          echo "Installing dependencies for test projects..."
          for test_dir in test/plugins/*/; do
            for project_dir in "$test_dir"*/; do
              if [ -f "$project_dir/mix.exs" ]; then
                echo "Installing deps for $project_dir"
                cd "$project_dir"
                mix deps.get
                cd - > /dev/null
              fi
            done
          done

      - name: Run plugin test suite
        run: |
          chmod +x test/run-all-tests.sh
          ./test/run-all-tests.sh

  polar-quest-checks:
    name: Polar Quest Validation
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run validation checks
        run: |
          echo "Running Polar Quest validation checks..."

          # Validate marketplace structure
          echo "✓ Validating marketplace.json..."
          jq empty .claude-plugin/marketplace.json

          # Validate plugin metadata
          echo "✓ Validating plugin metadata..."
          for plugin_json in plugins/*/.claude-plugin/plugin.json; do
            if [ -f "$plugin_json" ]; then
              jq empty "$plugin_json"
            fi
          done

          # Validate hook definitions
          echo "✓ Validating hooks..."
          for hooks_json in plugins/*/hooks/hooks.json; do
            if [ -f "$hooks_json" ]; then
              jq empty "$hooks_json"
            fi
          done

          # Check for required README files
          echo "✓ Checking documentation..."
          for plugin_dir in plugins/*/; do
            if [ ! -f "$plugin_dir/README.md" ]; then
              echo "❌ Missing README.md in $plugin_dir"
              exit 1
            fi
          done

          echo "✅ All Polar Quest validation checks passed!"

      - name: Verify hook scripts exist
        run: |
          echo "Verifying hook scripts..."
          for hooks_json in plugins/*/hooks/hooks.json; do
            if [ -f "$hooks_json" ]; then
              plugin_dir=$(dirname $(dirname "$hooks_json"))
              echo "Checking hooks in $plugin_dir..."

              # Extract script paths from hooks.json and verify they exist
              scripts=$(jq -r '.. | .command? | select(. != null) | select(startswith("bash"))' "$hooks_json" | grep -oP 'scripts/[^ ]+' || true)

              for script in $scripts; do
                script_path="$plugin_dir/$script"
                if [ ! -f "$script_path" ]; then
                  echo "❌ Hook script not found: $script_path"
                  exit 1
                fi

                # Verify script is executable or can be executed with bash
                if [ ! -x "$script_path" ] && [ ! -r "$script_path" ]; then
                  echo "❌ Hook script not readable: $script_path"
                  exit 1
                fi
              done
            fi
          done
          echo "✅ All hook scripts verified!"
